---
title: "Homework Assignment #3"
subtitle: "Prioritizing potential aquaculture"
author: "Liz Peterson"
date: 11.14.24
warning: false
error: false
editor_options: 
  chunk_output_type: console
---

```{r}
library(terra)
library(here)
library(sf)
library(raster)
library(stars)
```

### Prepare data
```{r}
# Read in West Coast Exclusive Economic Zones shapefile
wc_eez <- st_read(here('data/wc_regions_clean.shp'))

# Read in bathymetry raster
depth <- raster(here('data/depth.tif'))

# Read in annual average sea surface temperature rasters from 2008-2012
sst_2008 <- raster(here('data/average_annual_sst_2008.tif'))
sst_2009 <- raster(here('data/average_annual_sst_2009.tif'))
sst_2010 <- raster(here('data/average_annual_sst_2010.tif'))
sst_2011 <- raster(here('data/average_annual_sst_2011.tif'))
sst_2012 <- raster(here('data/average_annual_sst_2012.tif'))
```

```{r}
# Combine SST rasters
sst_stack <- stack(sst_2008, sst_2009, sst_2010, sst_2011, sst_2012)
```

```{r}
# Make sure all data sets have the same CRS - using sst_all as a reference
# First, check depth and sst_stack CRS
if (identical(crs(depth), crs(sst_stack))) {
  print("CRS's match!")
} else {
  depth <- projectRaster(depth, crs = crs(sst_stack))
}
```

```{r}
# Second, check wc_eez and sst_stack
# I am confused if this is necessary because wc_eez isn't a raster
# if (identical(crs(wc_eez), crs(sst_stack))) {
#   print("CRS's match!")
# } else {
#   wc_eez <- projectRaster(wc_eez, crs = crs(sst_stack))
# }
```

### Process data
```{r}
# Find mean SST from 2008-2012
mean_sst <- mean(sst_stack)

# Convert mean SST to Celcius from Kelvins
mean_sst <- mean_sst - 273.15
```

```{r}
# Check mean_sst
plot(mean_sst)
```


```{r}
# Crop the depth raster to match the extent of the sst raster
depth_cropped <- crop(depth, sst_stack)

# Resample the depth data to match the resolution of the sst raster (using the nearest neighbor approach)
depth_resampled <- resample(depth, sst_stack, method = "ngb")
```

```{r}
# Check depth raster after resampling
plot(depth_resampled)
```

```{r}
# Check that depth and sst match in resolution, extent, and CRS

# CRS matching
if (identical(crs(depth), crs(sst_stack))) {
  print("CRSs match!")
} else {
  depth <- projectRaster(depth, crs = crs(sst_stack))
}

# Extent matching
if (identical(extent(depth), extent(sst_stack))) {
  print("Extents match!")
} else {
  depth <- extend(depth, extent(sst_stack))
}

# Resolution matching
if (identical(res(depth), res(sst_stack))) {
  print("Resolutions match!")
} else {
  depth <- resample(depth, sst_stack, method = "bilinear")
}
```

```{r}
# Stack rasters for manipulation
sst_depth <- stack(sst_stack, depth)
```


### Find suitable locations
```{r}
# Reclassify sst and depth into locations that are suitable for oysters
# set suitable values to 1 and unsuitable values to 0

# For sst, suitable values are between 11-30 (degrees celsius)
sst_rcl <- matrix(c(-Inf, 11, 0,
                    11, 30, 1, 
                    30, Inf, 0),
                  ncol = 3, byrow = TRUE)

# For depth, suitable values are between 0-70 (meters below sea level)
depth_rcl <- matrix(c(-Inf, 0, 0,
                    0, 70, 1,
                    70, Inf, 0),
                    ncol = 3, byrow = TRUE)

for (i in 1:nlayers(sst_stack)) {
  # Reclassify by sst
  reclass_layer_sst <- classify(sst_stack[[i]], rcl = sst_rcl)
}

# Reclassify raster by sst
#reclass_sst <- classify(sst_depth, rcl = sst_rcl)

# Reclassify raster by depth 
#reclass_depth <- classify(sst_depth, rcl = depth_rcl)

# Raster map algebra for 0s and 1s
#reclass_sst_depth <- reclass_depth * reclass_sst

plot(reclass_sst_depth)
```

### Determine the most suitable EEZ
```{r}

```

